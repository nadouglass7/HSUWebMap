CMTile.UPPER_RIGHT=-1;CMTile.LOWER_RIGHT=-2;CMTile.LOWER_LEFT=-3;CMTile.UPPER_LEFT=-4;CMTile.NumTilesLoaded=0;function CMTile(TheDataset,ZoomLevel,GlobalColumn,GlobalRow){this.GlobalRow=GlobalRow;this.GlobalColumn=GlobalColumn;this.ZoomLevel=ZoomLevel;this.TheData=null;this.TheRaster=null;this.TheRasterRequest=null;this.ChildTiles=null;this.TheDataset=TheDataset;this.LoadStatus=CMDataset.LOAD_STATUS_NONE;this.TheRequest=null;this.PaintTileInfo=false;}CMTile.prototype.LoadTile=function(TheView){var FileName="Tiles_"+this.ZoomLevel+"/"+(this.GlobalColumn)+"/"+(this.GlobalRow)+".js";this.TheDataset.GetParent(CMMainContainer).AddToDebugPanel(this.TheDataset.GetName()+" Requesting tile "+FileName+", "+CMUtilities.GetSeconds());var URL=this.TheDataset.URL+FileName;var TheRequest=new XMLHttpRequest();this.TheRequest=TheRequest;TheRequest.open("GET",URL,true);TheRequest.TheView=TheView;TheRequest.TheURL=URL;TheRequest.TheDataset=this.TheDataset;TheRequest.TheTile=this;TheRequest.FileName=FileName;this.LoadStatus=CMDataset.LOAD_STATUS_LOADING;TheRequest.onreadystatechange=function(){if(this.readyState==4){if(this.status==200){var TheText=this.responseText;var TheGeoJSONObject=JSON.parse(TheText);var TheTile=this.TheTile;CMTile.NumTilesLoaded++;TheTile.TheData=TheGeoJSONObject;TheTile.LoadStatus=CMDataset.LOAD_STATUS_LOADED;if("HaveRaster"in TheTile.TheData){if(TheTile.TheData.HaveRaster){TheTile.LoadTileRaster(this.TheView);}}if(TheTile.TheData.NumChildTiles>0){for(var RowIndex=0;RowIndex<2;RowIndex++){for(var ColumnIndex=0;ColumnIndex<2;ColumnIndex++){if(TheTile.TheData.ChildTiles[RowIndex][ColumnIndex]>0){if(TheTile.ChildTiles==null){TheTile.ChildTiles=[];TheTile.ChildTiles[0]=[null,null];TheTile.ChildTiles[1]=[null,null];}var ChildZoomLevel=TheTile.ZoomLevel+1;var ChildColumn=(TheTile.GlobalColumn*2)+ColumnIndex;var ChildRow=(TheTile.GlobalRow*2)+(1-RowIndex);var TheChildTile=new CMTile(this.TheDataset,ChildZoomLevel,ChildColumn,ChildRow);if(this.PaintTileInfo)TheChildTile.SetPaintTileInfo(this.PaintTileInfo);TheTile.ChildTiles[RowIndex][ColumnIndex]=TheChildTile;}}}}if(this.ZoomToBounds){this.TheView.ZoomToBounds(this.TheDataset.GetBounds());}this.TheDataset.GetParent(CMMainContainer).AddToDebugPanel(this.TheDataset.GetName()+" Received tile "+this.FileName+" repainting:"+CMUtilities.GetSeconds());this.TheDataset.GetParent(CMScene).Repaint();}else alert("HTTP error "+this.status+" "+this.statusText+" ("+this.TheURL+")");}}
TheRequest.send();}
CMTile.prototype.LoadTileRaster=function(TheView){var FileName="Tiles_"+this.ZoomLevel+"/"+(this.GlobalColumn)+"/"+(this.GlobalRow)+".png";this.TheRaster=new Image();this.TheRaster.TheTile=this;var ZoomLevel=TheView.ZoomLevel+this.ZoomLevelOffset;var FileName="Tiles_"+this.ZoomLevel+"/"+(this.GlobalColumn)+"/"+(this.GlobalRow)+".png";var ThePath=this.TheDataset.URL+FileName;this.TheRasterRequest={LoadStatus:CMDataset.LOAD_STATUS_NONE,Type:CMDataset.REQUEST_TYPE_IMAGE,TheImage:this.TheRaster,src:ThePath,TheFunction:function(){this.TheTile.TheDataset.GetParent(CMScene).Repaint();}};this.TheRasterRequest.TheTile=this;CMDataset.MakeRequest(this.TheRasterRequest);}
CMTile.prototype.AddToFeatureBounds=function(FeatureIndex,Bounds){if("Features"in this.TheData){var TheFeatures=this.TheData.Features;var Found=false;for(var i=0;(i<TheFeatures.length)&&(Found==false);i++){var TheFeature=TheFeatures[i];if(TheFeature.LayerFeatureIndex==FeatureIndex){Found=true;var TheAreas=TheFeature.Areas;for(var AreaIndex=0;(AreaIndex<TheAreas.length);AreaIndex++){var TheArea=TheAreas[AreaIndex];var ThePolys=TheArea.Polys;for(var PolyIndex=0;(PolyIndex<ThePolys.length);PolyIndex++){var PolygonCoordinates=this.GetPolygonCoordinates(TheArea,PolyIndex,null);var PolygonBounds=CMUtilities.GetPolygonBounds(PolygonCoordinates.Xs,PolygonCoordinates.Ys,PolygonCoordinates.Xs.length);Bounds=CMUtilities.AddToBounds(Bounds,PolygonBounds);}}}}}return(Bounds);};CMTile.prototype.In=function(TheView,RefX,RefY){var FeatureIndex=-1;if((this.TheData!=null)&&("Features"in this.TheData)){var TheFeatures=this.TheData.Features;for(var i=0;(i<TheFeatures.length)&&(FeatureIndex==-1);i++){var ViewBounds=TheView.GetExtent();{var TheFeature=TheFeatures[i];var TheAreas=TheFeature.Areas;for(var AreaIndex=0;(AreaIndex<TheAreas.length)&&(FeatureIndex==-1);AreaIndex++){var TheArea=TheAreas[AreaIndex];var ThePolys=TheArea.Polys;for(var PolyIndex=0;(PolyIndex<ThePolys.length)&&(FeatureIndex==-1);PolyIndex++){var PolygonCoordinates=this.GetPolygonCoordinates(TheArea,PolyIndex,null);if(PolygonCoordinates.Xs.length>10){var j=12;}var Inside=CMUtilities.InsideAPolygon(RefX,RefY,PolygonCoordinates.Xs,PolygonCoordinates.Ys,PolygonCoordinates.Xs.length);if(Inside){FeatureIndex=i;}}}}}}return(FeatureIndex);};CMTile.prototype.MouseDown=function(TheView,RefX,RefY){var Used=false;if((this.TheData!=null)&&((TheView.GetTool()==CMView.TOOL_INFO)||(TheView.GetTool()==CMView.TOOL_SELECT))){if("Features"in this.TheData){var FeatureIndex=this.In(TheView,RefX,RefY);if(FeatureIndex!=-1){this.TheDataset.ShowInfoWindow(FeatureIndex,TheView,RefX,RefY);Used=true;}else{}}else if("TheColor"in this.TheData){if(this.TheRaster!=null){var Factor=Math.pow(2,this.ZoomLevel);var TileRefWidth=this.TheDataset.TileRefWidth/Factor;var TileRefX=(this.GlobalColumn*TileRefWidth);var TileRefY=(this.GlobalRow*TileRefWidth);var PixelX=parseInt((RefX-TileRefX)/TileRefWidth*256);var PixelY=parseInt((TileRefY-RefY)/TileRefWidth*256);if((PixelX>=0)&&(PixelX<256)&&(PixelY>=0)&&(PixelY<256)){var TheHTML="Pixel X:"+PixelX+" Y: "+PixelY;var Index=PixelY*(256*3)+(PixelX*3);var canvas=document.createElement("canvas");canvas.width=this.TheRaster.width;canvas.height=this.TheRaster.height;var ctx=canvas.getContext("2d");ctx.drawImage(this.TheRaster,0,0);var ImageData=ctx.getImageData(PixelX,PixelY,1,1);TheHTML+=" Value:"+ImageData.data[0]+","+ImageData.data[1]+","+ImageData.data[2];var InfoWindow=TheView.CreateInfoWindow("CMTile.InfoWindow",RefX,RefY,200,30,TheHTML);CMMainContainer.SetPopupWindow(InfoWindow);Used=true;}}if(Used==false){if(this.TheData.NumChildTiles>0){for(var RowIndex=0;RowIndex<2;RowIndex++){for(var ColumnIndex=0;ColumnIndex<2;ColumnIndex++){if(this.TheData.ChildTiles[RowIndex][ColumnIndex]>0){Used=this.ChildTiles[RowIndex][ColumnIndex].MouseDown(TheView,RefX,RefY);}}}}}}}return(Used);};CMTile.prototype.CheckPaintTile=function(TheView,ThisStepTileRefWidth){var ThisStepsTilePixelWidth=TheView.GetPixelWidthFromRefWidth(ThisStepTileRefWidth);var PaintTile=false;if(this.TheDataset.PaintDebugTile){if((this.TheDataset.DebugZoomLevel==this.ZoomLevel)&&(this.TheDataset.DebugGlobalColumn==this.GlobalColumn)&&(this.TheDataset.DebugGlobalRow==this.GlobalRow)){PaintTile=true;}}else{if(PaintTile==false){if((ThisStepsTilePixelWidth<=256))PaintTile=true;if(this.ChildTiles==null){PaintTile=true;}else{if(this.TheData.NumChildTiles>0){NumLoadedChildTiles=0;for(var RowIndex=0;RowIndex<2;RowIndex++){for(var ColumnIndex=0;ColumnIndex<2;ColumnIndex++){if(this.TheData.ChildTiles[RowIndex][ColumnIndex]>0){var TheChildTile=this.ChildTiles[RowIndex][ColumnIndex];if(TheChildTile.LoadStatus==CMDataset.LOAD_STATUS_NONE){TheChildTile.LoadTile(TheView);PaintTile=true;}else if(TheChildTile.LoadStatus==CMDataset.LOAD_STATUS_LOADING){PaintTile=true;}else{if("Features"in this.TheData){NumLoadedChildTiles++;}else if("TheColor"in this.TheData){if(this.TheData.TheColor!=null){NumLoadedChildTiles++;}else{if(this.TheRasterRequest.LoadStatus==CMDataset.LOAD_STATUS_LOADED){NumLoadedChildTiles++;}else if(this.TheRasterRequest.LoadStatus==CMDataset.LOAD_STATUS_CANCELED){this.LoadTileRaster(TheView);}}}}}else if(this.TheData.ChildTiles[RowIndex][ColumnIndex]==0){NumLoadedChildTiles++;}}}if(NumLoadedChildTiles<4)PaintTile=true;}}}}return(PaintTile);}
CMTile.prototype.GetPolygonCoordinates=function(TheArea,PolyIndex,PaintedEdges){Result=null;var Factor=Math.pow(2,this.ZoomLevel);var TileRefWidth=this.TheDataset.TileRefWidth/Factor;var RefX=(this.GlobalColumn*TileRefWidth);var RefY=(this.GlobalRow*TileRefWidth);var TileRefLeft=RefX
var TileRefRight=RefX+TileRefWidth;var TileRefTop=RefY+TileRefWidth;var TileRefBottom=RefY;var TheEdges=TheArea.Edges;var ThePolys=TheArea.Polys;var ThePoly=ThePolys[PolyIndex];if(ThePoly.Closed){var EdgeIndex=ThePoly.EdgeIndexes[0];var TheEdge=TheEdges[EdgeIndex];if(PaintedEdges!=null)PaintedEdges[EdgeIndex]=true;Result={Xs:TheEdge.Xs,Ys:TheEdge.Ys};}else{var Xs=[];var Ys=[];var NumCoordinates=0;for(var PolyEdgeIndex=0;PolyEdgeIndex<ThePoly.EdgeIndexes.length;PolyEdgeIndex++){var EdgeIndex=ThePoly.EdgeIndexes[PolyEdgeIndex];if(EdgeIndex>=0){var EdgeXs=TheEdges[EdgeIndex].Xs;var EdgeYs=TheEdges[EdgeIndex].Ys;for(var k=0;k<EdgeXs.length;k++){Xs[NumCoordinates]=EdgeXs[k];Ys[NumCoordinates]=EdgeYs[k];NumCoordinates++;}if(PaintedEdges!=null)PaintedEdges[EdgeIndex]=true;}else{switch(EdgeIndex){case CMTile.UPPER_RIGHT:Xs[NumCoordinates]=TileRefRight
Ys[NumCoordinates]=TileRefTop
NumCoordinates++;break;case CMTile.LOWER_RIGHT:Xs[NumCoordinates]=TileRefRight
Ys[NumCoordinates]=TileRefBottom
NumCoordinates++;break;case CMTile.LOWER_LEFT:Xs[NumCoordinates]=TileRefLeft
Ys[NumCoordinates]=TileRefBottom
NumCoordinates++;break;case CMTile.UPPER_LEFT:Xs[NumCoordinates]=TileRefLeft
Ys[NumCoordinates]=TileRefTop
NumCoordinates++;break;}}}Result={Xs:Xs,Ys:Ys};}return(Result);}
CMTile.prototype.PaintTile=function(TheLayer,TheView,SelectedOnly,ThisStepTileRefWidth){var NumPainted=0;var Factor=1/Math.pow(2,this.ZoomLevel);var TileRefWidth=256*Factor;var RefX=(this.GlobalColumn*TileRefWidth);var RefY=(this.GlobalRow*TileRefWidth);var Extent={"XMin":RefX,"XMax":RefX+TileRefWidth,"YMax":RefY+TileRefWidth,"YMin":RefY}
if(CMUtilities.BoundsOverlap(Extent,TheView.GetExtent())){if(this.TheData!=null){var TileRefLeft=RefX
var TileRefRight=RefX+TileRefWidth;var TileRefTop=RefY+TileRefWidth;var TileRefBottom=RefY;var NextStepTileRefWidth=ThisStepTileRefWidth/2;var PaintTile=this.CheckPaintTile(TheView,ThisStepTileRefWidth);var NumChildrenPainted=0;if(PaintTile){if("Features"in this.TheData){if((this.ZoomLevel==5)&&(this.GlobalColumn==-36)&&(this.GlobalRow==15)){var j=12;}var TheFeatures=this.TheData.Features;for(var i=0;i<TheFeatures.length;i++){var ViewBounds=TheView.GetExtent();{var TheFeature=TheFeatures[i];var TheAreas=TheFeature.Areas;for(var AreaIndex=0;AreaIndex<TheAreas.length;AreaIndex++){var TheArea=TheAreas[AreaIndex];var TheEdges=TheArea.Edges;var ThePolys=TheArea.Polys;var PaintedEdges=[];for(var j=0;j<TheEdges.length;j++)PaintedEdges[j]=false;for(var PolyIndex=0;PolyIndex<ThePolys.length;PolyIndex++){var PolygonCoordinates=this.GetPolygonCoordinates(TheArea,PolyIndex,PaintedEdges);TheView.PaintRefPoly2(PolygonCoordinates.Xs,PolygonCoordinates.Ys,true,false);}for(var EdgeIndex=0;EdgeIndex<TheEdges.length;EdgeIndex++){{var Xs=TheEdges[EdgeIndex].Xs;var Ys=TheEdges[EdgeIndex].Ys;for(var CoordinateIndex=1;CoordinateIndex<Xs.length;CoordinateIndex++){TheView.PaintRefLine(Xs[CoordinateIndex-1],Ys[CoordinateIndex-1],Xs[CoordinateIndex],Ys[CoordinateIndex]);}}}}}}}if("TheColor"in this.TheData){if(this.TheData.TheColor==null){if(this.TheRasterRequest!=null){if(this.TheRasterRequest.LoadStatus==CMDataset.LOAD_STATUS_LOADED){var ImageRefWidth=TileRefWidth;var ImageRefHeight=-TileRefWidth;var ImageRefX=RefX;var ImageRefY=RefY+TileRefWidth;TheView.PaintRefImageScaled(this.TheRaster,ImageRefX,ImageRefY,ImageRefWidth,ImageRefHeight);}else if(this.TheRasterRequest.LoadStatus==CMDataset.LOAD_STATUS_CANCELED){this.LoadTileRaster(TheView);}}}else{var TheColor=this.TheData.TheColor;if(TheColor!==null){var Test="rgb("+TheColor[0]+","+TheColor[1]+","+TheColor[2]+")";var TheStyle2={"fillStyle":""+Test+"","lineWidth":0};if(TheStyle2!=null)TheView.SetStyle(TheStyle2);TheView.PaintRefBounds(Extent);if(TheStyle2!=null)TheView.RestoreStyle();}}}if((this.PaintTileInfo)){var TheStyle2={"font":"20px Arial","fillStyle":"red","lineWidth":1,"strokeColor":"red","strokeStyle":"#000",};if(TheStyle2!=null)TheView.SetStyle(TheStyle2);var CenterX=RefX+TileRefWidth/2;var CenterY=RefY+TileRefWidth/2;var TheText=this.ZoomLevel+"_"+this.GlobalColumn+"_"+this.GlobalRow;TheView.PaintRefText(TheText,CenterX,CenterY,20);TheView.PaintRefLine(RefX,RefY,RefX,RefY+TileRefWidth);TheView.PaintRefLine(RefX+TileRefWidth,RefY,RefX+TileRefWidth,RefY+TileRefWidth);TheView.PaintRefLine(RefX,RefY,RefX+TileRefWidth,RefY);TheView.PaintRefLine(RefX,RefY+TileRefWidth,RefX+TileRefWidth,RefY+TileRefWidth);if(TheStyle2!=null)TheView.RestoreStyle();}}else{if(this.TheData.NumChildTiles>0){for(var RowIndex=0;RowIndex<2;RowIndex++){for(var ColumnIndex=0;ColumnIndex<2;ColumnIndex++){if(this.TheData.ChildTiles[RowIndex][ColumnIndex]>0){var TheChildTile=this.ChildTiles[RowIndex][ColumnIndex];NumChildrenPainted+=TheChildTile.PaintTile(TheLayer,TheView,SelectedOnly,NextStepTileRefWidth);}}}}}NumPainted++;if(NumChildrenPainted<4){var Test=12;}}}return(NumPainted);}
CMTile.prototype.SetPaintTileInfo=function(NewPaintTileInfo){this.PaintTileInfo=NewPaintTileInfo;}