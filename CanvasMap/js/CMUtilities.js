function CMUtilities(){}CMUtilities.COORDINATE_UNITS_DD=0;CMUtilities.COORDINATE_UNITS_DMS=1;CMUtilities.COORDINATE_UNITS_METERS=2;CMUtilities.COORDINATE_UNITS_FEET=3;CMUtilities.COORDINATE_UNITS_PIXELS=4;CMUtilities.COORDINATE_UNITS_ZOOM=5;CMUtilities.QUANTILES=1;CMUtilities.IsDefined=function(TheElement){var Result=true;if((TheElement==undefined)||(TheElement==null))Result=false;return(Result);}
CMUtilities.AbsolutePosition=function(TheElement,Left,Top,Width,Height){TheElement.style.position="absolute";TheElement.style.left=Left+"px";TheElement.style.top=Top+"px";TheElement.style.width=Width+"px";TheElement.style.height=Height+"px";}
CMUtilities.GetPopupMenu=function(ClassName,ClientX,ClientY){var ThePopupMenu=document.getElementById("LayerPopupMenu");if(ThePopupMenu==null){ThePopupMenu=document.createElement("DIV");ThePopupMenu.className=ClassName;ThePopupMenu.id="LayerPopupMenu";document.body.appendChild(ThePopupMenu);}while(ThePopupMenu.firstChild){ThePopupMenu.removeChild(ThePopupMenu.firstChild);}this.ThePopupMenu=ThePopupMenu;ThePopupMenu.style.position="absolute";ThePopupMenu.style.left=ClientX+"px";ThePopupMenu.style.top=ClientY+"px";CMMainContainer.SetPopupWindow(ThePopupMenu);ThePopupMenu.style.visibility="visible";return(ThePopupMenu);}
CMUtilities.GetElementCoordinate=function(ClientX,ClientY,Canvas){if(Canvas==null){var j=12;}var rect=Canvas.getBoundingClientRect();var Coordinate={x:Math.round(ClientX-rect.left),y:Math.round(ClientY-rect.top)}
return(Coordinate);}
CMUtilities.GetTwoDigitHex=function(Value){var Red=parseInt(Value);var Red=Red.toString(16);if(Red.length<2)Red="0"+Red;return(Red);}
CMUtilities.GetRGBColorFromNamedColor=function(NamedColor){var TempDiv=$('<div></div>').appendTo("body").css('background-color',NamedColor);var TheComputedStyle=window.getComputedStyle(TempDiv[0]);var ComputedRGB=TheComputedStyle.backgroundColor;TempDiv.remove();return(ComputedRGB);};CMUtilities.GetRGBAValuesFromRGBA=function(Value){var Result={Red:255,Green:255,Blue:255,};if((typeof(Value)!="undefined")){if(Value.indexOf("rgb")>-1){var Index=Value.indexOf("(");Value=Value.substring(Index+1);Index=Value.indexOf(")");Value=Value.substring(0,Index);}var Tokens=Value.split(",");Result.Red=parseFloat(Tokens[0]);Result.Green=parseFloat(Tokens[1]);Result.Blue=parseFloat(Tokens[2]);if(Tokens.length>3){Result.Transparency=parseFloat(Tokens[3]);}}return(Result);}
CMUtilities.GetHexFromRGB=function(Value){var Result=CMUtilities.GetRGBAValuesFromRGBA(Value);var Red=CMUtilities.GetTwoDigitHex(Result.Red);var Green=CMUtilities.GetTwoDigitHex(Result.Green);var Blue=CMUtilities.GetTwoDigitHex(Result.Blue);Value="#"+Red+Green+Blue;return(Value);}
CMUtilities.GetHexColorFromColor=function(Value){if(Value!=undefined){Value=""+Value;if(Value.indexOf("rgb")>-1){Value=CMUtilities.GetHexFromRGB(Value);}else if((Value.charAt(0)>='0')&&(Value.charAt(0)<='9')){Value=CMUtilities.GetHexFromRGB(Value);}else if(Value.indexOf("#")==-1){Value=CMUtilities.GetRGBColorFromNamedColor(Value);Value=CMUtilities.GetHexFromRGB(Value);}}return(Value);}
CMUtilities.GetRGBFromHex=function(Value){var Red=Value.substring(1,3);var Green=Value.substring(3,5);var Blue=Value.substring(5,7);var Result={Red:parseInt(Red,16),Green:parseInt(Green,16),Blue:parseInt(Blue,16),Transparency:1}
return(Result);}
CMUtilities.GetColorsFromAnyColor=function(Value,Transparency){var Colors={Red:255,Green:255,Blue:255,};if(Value!=undefined){Value=""+Value;if(Value.indexOf("rgb")>-1){Colors=CMUtilities.GetRGBAValuesFromRGBA(Value)}else if((Value.charAt(0)>='0')&&(Value.charAt(0)<='9')){var Tokens=Value.split(",");Colors.Red=parseFloat(Tokens[0]);Colors.Green=parseFloat(Tokens[1]);Colors.Blue=parseFloat(Tokens[2]);if(Tokens.length>3){Colors.Transparency=parseFloat(Tokens[3]);}}else if(Value.indexOf("#")!=-1){Colors=CMUtilities.GetRGBFromHex(Value);}else if(Value.indexOf("#")==-1){var RGBColor=CMUtilities.GetRGBColorFromNamedColor(Value);Colors=CMUtilities.GetRGBAValuesFromRGBA(RGBColor);}if(Transparency!=undefined)Colors.Transparency=Transparency;}return(Colors);}
CMUtilities.GetRGBAFromAnyColor=function(Value,Transparency){var Colors=CMUtilities.GetColorsFromAnyColor(Value,Transparency);var Value=null;if(Colors.Transparency==undefined){Value="rgb("+Colors.Red+","+Colors.Green+","+Colors.Blue+")";}else{Value="rgba("+Colors.Red+","+Colors.Green+","+Colors.Blue+","+Colors.Transparency+")";}return(Value);}
CMUtilities.GetColorsFromArrays=function(FeatureValues,TheColors,Intervals){var TheHistogram=CMUtilities.GetHistogram(FeatureValues,1000);var Reds=[];var Greens=[];var Blues=[];for(var i=0;i<TheColors.length;i++){var Hex=TheColors[i];var RGB=CMUtilities.GetRGBFromHex(Hex);Reds[i]=RGB.Red;Greens[i]=RGB.Green;Blues[i]=RGB.Blue;}var FeatureColors=[];var LegendLabels=[];if((Intervals!=undefined)){for(var i=0;i<FeatureValues.length;i++){var Index=0;var Value=FeatureValues[i];while((Value>Intervals[Index+1])&&(Index<Intervals.length-1)){Index++;}if(Index>=Reds.length)Index=Reds.length-1;var Red=Reds[Index];var Green=Greens[Index];var Blue=Blues[Index];var TheColor="rgb("+Red+","+Green+","+Blue+")";FeatureColors[i]=TheColor;}for(var i=0;i<Intervals.length;i++){LegendLabels[i]=Math.round(Intervals[i])+" to "+Math.round(Intervals[i+1]);}}else{var Min=TheHistogram.Min;var Max=TheHistogram.Max;var Range=Max-Min;for(var i=0;i<FeatureValues.length;i++){var Index=0;if(Range!=0){Index=parseInt((FeatureValues[i]-Min)/(Range)*TheColors.length);}var Red=Reds[Index];var Green=Greens[Index];var Blue=Blues[Index];var TheColor="rgb("+Red+","+Green+","+Blue+")";FeatureColors[i]=TheColor;}for(var i=0;i<TheColors.length;i++){var Value1=Min+(i*Range);var Value2=Value1+Range;LegendLabels[i]=Value1+" to "+Value2;}}var Result={LegendLabels:LegendLabels,FeatureColors:FeatureColors}
return(Result);};CMUtilities.AddLegend=function(TheCanvasElement,TheColors,LegendLabels,X,Y,Width,Height){var Legend=document.createElement("DIV");var TheHTML="<div>";TheHTML+="<table>";for(var i=0;i<TheColors.length;i++){TheHTML+="<tr>";TheHTML+="<td>";TheHTML+="<div style='border:solid black 1px;background-color:"+TheColors[i]+";width:12px;height:12px'></div>";TheHTML+="</td>";TheHTML+="<td>";TheHTML+="<div>"+LegendLabels[i]+"</div>";TheHTML+="</td>";TheHTML+="<tr>";}TheHTML+="</table>";Legend.innerHTML=TheHTML;TheCanvasElement.appendChild(Legend);CMUtilities.AbsolutePosition(Legend,X,Y,Width,Height);return(Legend);}
CMUtilities.GetMinMax=function(TheArray){var Value;var Min;var Max;for(var i=0;i<TheArray.length;i++){Value=TheArray[i];if(i==0){Min=Value;Max=Value;}else{if(Value<Min)Min=Value;if(Value>Max)Max=Value;}}var Result={Min:Min,Max:Max};return(Result);};CMUtilities.GetHistogram=function(TheArray,NumBins){var MinMaxes=CMUtilities.GetMinMax(TheArray);var Min=MinMaxes.Min;var Max=MinMaxes.Max;var Range=Max-Min;var Bins=[];var Labels=[];for(var i=0;i<NumBins;i++){Bins[i]=0;Labels[i]=Min+(Range*i);}if(Range!=0){var Value;for(var i=0;i<TheArray.length;i++){Bin=Math.round((TheArray[i]-Min)/Range*NumBins);if(Bin>=NumBins)Bin=NumBins-1;Bins[Bin]++;}}var Result={Min:Min,Max:Max,Bins:Bins,Labels:Labels};return(Result);};CMUtilities.GetQuantiles=function(TheHistogram,NumGroups){var Bins=TheHistogram.Bins;var Total=0;for(var i=0;i<Bins.length;i++){Total+=Bins[i];};var GroupSize=Total/NumGroups;var BinWidth=(TheHistogram.Max-TheHistogram.Min)/NumGroups;var Quantiles=[];Quantiles[0]=TheHistogram.Min;var NextGroup=GroupSize;var CurrentNumber=0;for(var i=0;i<Bins.length;i++){CurrentNumber+=Bins[i];if(CurrentNumber>=NextGroup){Quantiles.push(TheHistogram.Min+BinWidth*i);NextGroup+=GroupSize;}}Quantiles.push(TheHistogram.Max);return(Quantiles);};CMUtilities.FlipArray=function(TheArray){var Result=[];var LastIndex=TheArray.length-1;for(var i=0;i<=LastIndex;i++){Result.push(TheArray[LastIndex-i]);}return(Result);}
CMUtilities.InsertIntoSortedArray=function(TheArray,TheValue,AllowDuplicates){if(AllowDuplicates==undefined)AllowDuplicates=false;var Index=TheArray.indexOf(TheValue);if(Index!=-1){if(AllowDuplicates)TheArray.splice(Index,0,TheValue);}else{var Index=0;while((Index<TheArray.length)&&(TheArray[Index]<TheValue))Index++;TheArray.splice(Index,0,TheValue);}}
CMUtilities.GetRegularPolygon=function(NumPoints,Size,CenterX,CenterY,StartAngle){var Result=null;if(NumPoints>0){var HalfSize=Size/2;var DX,DY;var Radius;var Angle=0;var X,Y;var Result=[];Result[0]=[];Result[1]=[];var SweepAngle=Math.PI*2/NumPoints;StartAngle-=180;StartAngle=(StartAngle*Math.PI*2/360);Radius=HalfSize/Math.cos(SweepAngle/2);Angle=StartAngle;for(var i=0;i<NumPoints;i++){DX=Radius*Math.sin(Angle);DY=Radius*Math.cos(Angle);Result[0][i]=CenterX+DX;Result[1][i]=CenterY+DY;Angle+=SweepAngle;}}return(Result);}
CMUtilities.GetStar=function(NumPoints,Size,CenterX,CenterY,StartAngle){var Result=null;if(NumPoints>0){var HalfSize=Size/2;var DX,DY;var Radius;var Angle=0;var X,Y;Result=[];Result[0]=[];Result[1]=[];var SweepAngle=Math.PI*2/NumPoints/2;StartAngle-=180;StartAngle=(StartAngle*Math.PI*2/360);Radius=HalfSize/Math.cos(SweepAngle/2);var InnerRadius=Radius/2.5;Angle=StartAngle;for(var i=0;i<NumPoints;i++){DX=Radius*Math.sin(Angle);DY=Radius*Math.cos(Angle);X=CenterX+DX;Y=CenterY+DY;Result[0][i*2]=CenterX+DX;Result[1][i*2]=CenterY+DY;Angle+=SweepAngle;DX=InnerRadius*Math.sin(Angle);DY=InnerRadius*Math.cos(Angle);X=CenterX+DX;Y=CenterY+DY;Result[0][i*2+1]=CenterX+DX;Result[1][i*2+1]=CenterY+DY;Angle+=SweepAngle;}}return(Result);}
CMUtilities.PositionControl=function(SelectControl,Position,X,Y){if(Position!=undefined){SelectControl.style.position=Position;SelectControl.style.left=X+"px";SelectControl.style.top=Y+"px";}}
CMUtilities.CreateSelectControl=function(Values,Selected,Position,X,Y){var TheControl=document.createElement("SELECT");var SelectedIndex=-1;for(var i=0;i<Values.length;i++){if(Selected==Values[i])SelectedIndex=i;var option=document.createElement("option");option.text=Values[i];TheControl.add(option);}if(SelectedIndex!=-1)TheControl.selectedIndex=SelectedIndex;CMUtilities.PositionControl(TheControl,Position,X,Y);return(TheControl);}
CMUtilities.CreateSliderControl=function(Min,Max,Value,Position,X,Y){var SliderControl=document.createElement("input");SliderControl.type="range";SliderControl.min=Min;SliderControl.max=Max;SliderControl.value=Value;CMUtilities.PositionControl(SliderControl,Position,X,Y);return(SliderControl);}
CMUtilities.CreateCheckboxControl=function(Value,Position,X,Y){var SliderControl=document.createElement("input");SliderControl.type="checkbox";SliderControl.value=Value;CMUtilities.PositionControl(SliderControl,Position,X,Y);return(SliderControl);}
CMUtilities.CreateLabelControl=function(Text,Position,X,Y){var TheLabel=document.createElement("div");TheLabel.innerHTML=Text;CMUtilities.PositionControl(TheLabel,Position,X,Y);return(TheLabel);}
CMUtilities.CreateInfoWindow=function(ID,MouseX,MouseY,Width,Height,Text,TheImageFolder){var Padding=10;var TriangleHeight=10;var TriangleWidth=16;var TriangleLeftOffset=10;var TheToolTip=document.getElementById(ID);if(TheToolTip!=null){document.body.removeChild(TheToolTip);TheToolTip=null;}if(TheToolTip==null){TheToolTip=document.createElement("DIV");TheToolTip.id=ID;document.body.appendChild(TheToolTip);}var ScreenHeight=window.innerHeight;var ScrollTop=$(window).scrollTop();var ScreenWidth=window.innerWidth;var ScrollLeft=$(window).scrollLeft();var Above=true;if(MouseY<(ScreenHeight/2))Above=false;var ToTheRight=false;if(MouseX<(ScreenWidth/2))ToTheRight=true;TheToolTip.style.position="absolute";TheToolTip.style.width=Width+"px";var TriangleToVerticalSide=(TriangleWidth/2)+Padding+(TriangleLeftOffset);if(ToTheRight){var TheToolTipLeft=MouseX-TriangleToVerticalSide+ScrollLeft;TheToolTip.style.left=TheToolTipLeft+"px";}else{var TheToolTipLeft=MouseX+TriangleToVerticalSide+ScrollLeft-Width;TheToolTip.style.left=TheToolTipLeft+"px";}if(Above){var TheToolTipBottom=ScreenHeight-MouseY-ScrollTop+TriangleHeight;TheToolTip.style.bottom=TheToolTipBottom+"px";}else{var TheToolTipTop=MouseY+TriangleHeight+ScrollTop;TheToolTip.style.top=TheToolTipTop+"px";}var TheBox=document.createElement("div");TheBox.className="CM_InfoBox";TheBox.innerHTML=Text;TheBox.style.padding=Padding+'px';TheToolTip.appendChild(TheBox);var TheTriangle=document.createElement("div");TheToolTip.appendChild(TheTriangle);TheTriangle.style.position="absolute";if(ToTheRight){TheTriangle.style.left=(TriangleToVerticalSide-(TriangleWidth/2))+'px';}else{TheTriangle.style.right=(TriangleToVerticalSide-(TriangleWidth/2))+'px';}if(Above==false){TheTriangle.style.top=(-TriangleHeight-3)+'px';TheTriangle.innerHTML="<img src='"+TheImageFolder+"Triangle_Up.png'></img>";}else{TheTriangle.style.bottom=(-TriangleHeight-3)+'px';TheTriangle.innerHTML="<img src='"+TheImageFolder+"Triangle_Down.png'></img>";}TheToolTip.style.visibility="visible";return(TheToolTip);}
CMUtilities.CreateInfoWindow2=function(ID,MouseX,MouseY,Width,Height,Text,ImageFolder){var TriangleOffset=20;var TheToolTip=document.getElementById(ID);if(TheToolTip!=null){document.body.removeChild(TheToolTip);TheToolTip=null;}if(TheToolTip==null){TheToolTip=document.createElement("DIV");TheToolTip.className="CM_InfoContainer";TheToolTip.id=ID;document.body.appendChild(TheToolTip);}var ScreenHeight=window.innerHeight;var ScrollTop=$(window).scrollTop();var ScreenWidth=window.innerWidth;var ScrollLeft=$(window).scrollLeft();var Above=true;if(MouseY<(ScreenHeight/2))Above=false;var ToTheRight=false;if(MouseX<(ScreenWidth/2))ToTheRight=true;var TriangleToVerticalSide=TriangleOffset;if(ToTheRight){var TheToolTipLeft=MouseX+ScrollLeft-TriangleToVerticalSide;TheToolTip.style.left=TheToolTipLeft+"px";}else{var MouseXFromRight=ScreenWidth-(MouseX+ScrollLeft);var TheToolTipRight=MouseXFromRight-TriangleToVerticalSide;TheToolTip.style.right=TheToolTipRight+"px";}if(Above){var TheToolTipBottom=ScreenHeight-MouseY-ScrollTop;TheToolTip.style.bottom=TheToolTipBottom+"px";}else{var TheToolTipTop=MouseY+ScrollTop;TheToolTip.style.top=TheToolTipTop+"px";}var TheBox=document.createElement("div");TheBox.innerHTML=Text;TheToolTip.appendChild(TheBox);var TheTriangle=document.createElement("div");if(Above){TheBox.className="CM_InfoBoxAboveTriangle";TheTriangle.innerHTML="<img src='../../Includes/"+ImageFolder+"Triangle_Down.png'></img>";if(ToTheRight){TheTriangle.className="CM_InfoArrowSW";}else{TheTriangle.className="CM_InfoArrowSE";}}else{TheBox.className="CM_InfoBoxBelowTriangle";TheTriangle.innerHTML="<img src='../../Includes/"+ImageFolder+"Triangle_Up.png'></img>";if(ToTheRight){TheTriangle.className="CM_InfoArrowNW";}else{TheTriangle.className="CM_InfoArrowNE";}}TheToolTip.appendChild(TheTriangle);TheToolTip.style.visibility="visible";return(TheToolTip);}
CMUtilities.ApplyToGeometryCoordinates=function(TheGeometry,TheFunction,TheFunctionsParameter){var Num=0;if(TheGeometry.type=="Point"){TheFunction(TheFunctionsParameter,TheGeometry.coordinates);}else if((TheGeometry.type=="MultiPoint")||(TheGeometry.type=="LineString")){for(var j=0;j<TheGeometry.coordinates.length;j++){TheFunction(TheFunctionsParameter,TheGeometry.coordinates[j]);}}else if(TheGeometry.type=="Polygon"||(TheGeometry.type=="MultiLineString")){for(var i=0;i<TheGeometry.coordinates.length;i++){for(var j=0;j<TheGeometry.coordinates[i].length;j++){TheFunction(TheFunctionsParameter,TheGeometry.coordinates[i][j]);}}}else if(TheGeometry.type=="MultiPolygon"){for(var i=0;i<TheGeometry.coordinates.length;i++){for(var j=0;j<TheGeometry.coordinates[i].length;j++){for(var k=0;k<TheGeometry.coordinates[i][j].length;k++){TheFunction(TheFunctionsParameter,TheGeometry.coordinates[i][j][k]);}}}}else if(TheGeometry.type=="GeometryCollection"){for(var j=0;j<TheGeometry.geometries.length;j++){Num+=GetNumGeoJSONCoordiantes(TheGeometry.geometries[j]);}}return(Num);}
CMUtilities.UpdateGeoJSONCoordinateBounds=function(TheBounds,TheCoordinates){var X,Y;if(TheCoordinates!=undefined){{X=TheCoordinates[0];Y=TheCoordinates[1];if(Object.keys(TheBounds).length==0){TheBounds.XMin=X;TheBounds.XMax=X;TheBounds.YMin=Y;TheBounds.YMax=Y;}else{if(TheBounds.XMin>X)TheBounds.XMin=X;if(TheBounds.XMax<X)TheBounds.XMax=X;if(TheBounds.YMin>Y)TheBounds.YMin=Y;if(TheBounds.YMax<Y)TheBounds.YMax=Y;}}}}
CMUtilities.InGeoJSONPolygon=function(RefX,RefY,TheCoordinates){var Result=false;var Xs=[];var Ys=[];if(TheCoordinates!=undefined){for(var j=0;j<TheCoordinates.length;j++){var X=TheCoordinates[j][0];var Y=TheCoordinates[j][1];Xs[j]=X;Ys[j]=Y;}Result=CMUtilities.InsideAPolygon(RefX,RefY,Xs,Ys,TheCoordinates.length)}return(Result);}
CMUtilities.InGeoJSONPolyline=function(RefX,RefY,TheCoordinates,Tolerance){var Result=false;var Xs=[];var Ys=[];if(TheCoordinates!=undefined){var X1=TheCoordinates[0][0];var Y1=TheCoordinates[0][1];for(var j=1;(j<TheCoordinates.length)&&(Result==false);j++){var X2=TheCoordinates[j][0];var Y2=TheCoordinates[j][1];var Distance=CMUtilities.DistanceToSegment(X1,Y1,X2,Y2,RefX,RefY);if(Distance<=Tolerance){Result=true;}var Distance=CMUtilities.DistanceToSegment(X1,Y1,X2,Y2,RefX,RefY);X1=X2;Y1=Y2;}}return(Result);}
CMUtilities.GetSymbol=function(Value,EastWestFlag){var Symbol="N";if(EastWestFlag)Symbol="E";if(Value<0){Symbol="S";if(EastWestFlag)Symbol="W";}return(Symbol);}
CMUtilities.GetDMSFromDD=function(Value,EastWestFlag,NotHTML,VariablePrecision){var Symbol=CMUtilities.GetSymbol(Value,EastWestFlag);if(Value<0)Value=-Value;var Degrees=Math.floor(Value);var DegreeSymbol="&deg;";if(NotHTML===true)DegreeSymbol="\xB0";var Text=Degrees+DegreeSymbol;Value=(Value-Degrees)*60;var Minutes=Math.floor(Value);if((VariablePrecision===false)||(Minutes!=0)){Text+=Minutes+"' ";Value=(Value-Minutes)*60;var Seconds=Math.floor(Value);if((VariablePrecision===false)||(Seconds!=0)){Text+=Seconds+"\"";}}Text+=" "+Symbol;return(Text);}
CMUtilities.GetDMSFromLonLat=function(Longitude,Latitude,NotHTML){var LongitudeText=CMUtilities.GetDMSFromDD(Longitude,true,NotHTML);var LatitudeText=CMUtilities.GetDMSFromDD(Latitude,false,NotHTML);var Text=LatitudeText+" "+LongitudeText;return(Text);}
CMUtilities.GetDMSFromLonLatJSObject=function(Longitude,Latitude){var LongitudeText=CMUtilities.GetDMSFromDD(Longitude,true);var LatitudeText=CMUtilities.GetDMSFromDD(Latitude,false);var Result={Latitude:LatitudeText,Longitude:LongitudeText}
return(Result);}
CMUtilities.GetTextFromEastingNorthing=function(Easting,Northing){var EastingSymbol=CMUtilities.GetSymbol(Easting,true);var NorthingSymbol=CMUtilities.GetSymbol(Northing,false);if(Easting<0)Easting=-Easting;if(Northing<0)Northing=-Northing;var Text=Easting+" "+EastingSymbol+" "+Northing+" "+NorthingSymbol;return(Text);}
CMUtilities.BoundsOverlap=function(Bounds1,Bounds2){var Result=false;if((Bounds1.XMin<=Bounds2.XMax)&&(Bounds1.XMax>=Bounds2.XMin)&&(Bounds1.YMin<=Bounds2.YMax)&&(Bounds1.YMax>=Bounds2.YMin)){if((Bounds1.ZMin!=undefined)&&(Bounds2.ZMin!=undefined)){if((Bounds1.ZMin<=Bounds2.ZMax)&&(Bounds1.ZMax>=Bounds2.ZMin)){Result=true;}}else{Result=true;}}return(Result);}
CMUtilities.CloneBounds=function(TheBounds){var clonedObject={XMin:TheBounds.XMin,XMax:TheBounds.XMax,YMin:TheBounds.YMin,YMax:TheBounds.YMax}
if(TheBounds.ZMin!=undefined){clonedObject.ZMin=TheBounds.ZMin;clonedObject.ZMax=TheBounds.ZMax;}return(clonedObject);}
CMUtilities.AddToBounds=function(TheBounds,NewBounds){if(TheBounds==null){TheBounds=NewBounds;}else if(NewBounds!=null){if(NewBounds.XMin<TheBounds.XMin)TheBounds.XMin=NewBounds.XMin;if(NewBounds.XMax>TheBounds.XMax)TheBounds.XMax=NewBounds.XMax;if(NewBounds.YMin<TheBounds.YMin)TheBounds.YMin=NewBounds.YMin;if(NewBounds.YMax>TheBounds.YMax)TheBounds.YMax=NewBounds.YMax;if(NewBounds.ZMin!=undefined){if(TheBounds.ZMin==undefined){TheBounds.ZMin=NewBounds.ZMin;TheBounds.ZMax=NewBounds.ZMax;}else{if(NewBounds.ZMin<TheBounds.ZMin)TheBounds.ZMin=NewBounds.ZMin;if(NewBounds.ZMax>TheBounds.ZMax)TheBounds.ZMax=NewBounds.ZMax;}}}return(TheBounds);}
CMUtilities.DistanceToSegment=function(SX1,SY1,SX2,SY2,PX1,PY1){var Result=0;var Slope=(SY2-SY1)/(SX2-SX1);var Intercept=SY2-(Slope*SX2);var a=Slope;var b=-1;var c=Intercept;var factor1=(a*a+b*b);var x=(b*(b*PX1-a*PY1)-(a*c))/factor1;var y=(a*(-b*PX1+a*PY1)-b*c)/factor1;if(SY1>SY2){var Temp=SY1;SY1=SY2;SY2=Temp;Temp=SX1;SX1=SX2;SX2=Temp;}var Distance=null;if(y<SY1){Distance=Math.sqrt((PX1-SX1)*(PX1-SX1)+(PY1-SY1)*(PY1-SY1));}else if(y>SY2){Distance=Math.sqrt((PX1-SX2)*(PX1-SX2)+(PY1-SY2)*(PY1-SY2));}else if((y==SY1)&&(y==SY2)){if(SX1<SX2){if(x<SX1){Distance=Math.sqrt((PX1-SX1)*(PX1-SX1)+(PY1-SY1)*(PY1-SY1));}else if(x>SX2){Distance=Math.sqrt((PX1-SX2)*(PX1-SX2)+(PY1-SY2)*(PY1-SY2));}}else{if(x<SX2){Distance=Math.sqrt((PX1-SX2)*(PX1-SX2)+(PY1-SY2)*(PY1-SY2));}else if(x>SX1){Distance=Math.sqrt((PX1-SX1)*(PX1-SX1)+(PY1-SY1)*(PY1-SY1));}}}if(Distance===null){Distance=Math.sqrt((x-PX1)*(x-PX1)+(y-PY1)*(y-PY1));}Result=Distance;return(Result);}
CMUtilities.GetLineFactors=function(X1,Y1,X2,Y2){var b;var m;var Result=[2];if(Y1==Y2){b=Y1;m=0;}else if(X1==X2){m=Double.POSITIVE_INFINITY;b=Double.NaN;}else{m=(Y2-Y1)/(X2-X1);b=Y1-(X1*m);}Result[0]=m;Result[1]=b;return(Result);}
CMUtilities.FindNumLineCrossingsToTheRight=function(StartX,StartY,EndX,EndY,RefX,RefY){var NumCrossings=0;if(StartY!=EndY){if((StartX>RefX)||(EndX>RefX)){if(((StartY<RefY)&&(EndY>RefY))||(StartY>RefY)&&(EndY<RefY)){if(StartX==EndX){if(RefX<StartX){NumCrossings++;}}else{Factors=CMUtilities.GetLineFactors(StartX,StartY,EndX,EndY);var m=Factors[0];var b=Factors[1];var x=(RefY-b)/m;if(RefX<x){NumCrossings++;}}}}}return(NumCrossings);}
CMUtilities.InsideAPolygon=function(RefX,RefY,Xs,Ys,NumPoints){var Result=false;var NumCrossings=0;var LastYDirection=0;var NewYDirection=0;for(var i=0;i<NumPoints-1;i++){if(Ys[i+1]>Ys[i])LastYDirection=1;else if(Ys[i+1]<Ys[i])LastYDirection=-1;}var OnFlat=false;if((Ys[NumPoints-1]==Ys[0])&&(RefY==Ys[0])&&(RefX<Xs[0])&&(RefX<Xs[NumPoints-1])){OnFlat=true;}for(var i=0;i<NumPoints;i++){var NextIndex=i+1;if(NextIndex==NumPoints)NextIndex=0;if(Ys[i]==Ys[NextIndex]){if(RefY==Ys[i]){if((RefX<Xs[i])&&(RefX<Xs[NextIndex])){OnFlat=true;}}}else{if(Ys[NextIndex]>Ys[i])NewYDirection=1;else if(Ys[NextIndex]<Ys[i])NewYDirection=-1;if(OnFlat){if(NewYDirection==LastYDirection){NumCrossings++;}}else{if(Ys[i]==RefY){if(RefX<Xs[i]){if(NewYDirection==LastYDirection){NumCrossings++;}}}else{NumCrossings+=CMUtilities.FindNumLineCrossingsToTheRight(Xs[i],Ys[i],Xs[NextIndex],Ys[NextIndex],RefX,RefY);}}OnFlat=false;LastYDirection=NewYDirection;}}if((NumCrossings%2)==1){Result=true;}return(Result);}
CMUtilities.GetPolygonBounds=function(Xs,Ys,NumPoints){var Result=null;if(NumPoints>0){var XMin=Xs[0];var XMax=Xs[0];var YMin=Ys[0];var YMax=Ys[0];for(var i=1;i<NumPoints;i++){if(Xs[i]<XMin)XMin=Xs[i];if(Xs[i]>XMax)XMax=Xs[i];if(Ys[i]<YMin)YMin=Ys[i];if(Ys[i]>YMax)YMax=Ys[i];}Result={XMin:XMin,XMax:XMax,YMin:YMin,YMax:YMax}}return(Result);}
CMUtilities.GetLength=function(X1,Y1,X2,Y2){return(Math.sqrt((X2-X1)*(X2-X1)+(Y2-Y1)*(Y2-Y1)));}
CMUtilities.GetSeconds=function(){var d=new Date();var n=d.getTime();return(n/1000);}
CMUtilities.Clone=function(TheObject){var Result=TheObject;if((TheObject!=null)&&(typeof(TheObject)==='object')&&(('isActiveClone'in TheObject)==false)){if(TheObject instanceof Date){Result=new TheObject.constructor();}else{Result=TheObject.constructor();}for(var key in TheObject){if(Object.prototype.hasOwnProperty.call(TheObject,key)){TheObject['isActiveClone']=null;Result[key]=CMUtilities.Clone(TheObject[key]);delete TheObject['isActiveClone'];}}}return(Result);}
CMUtilities.GetCoordinateString=function(RefX,RefY,CoordinateUnits,TheProjector,TheView){var Text="";switch(CoordinateUnits){case CMUtilities.COORDINATE_UNITS_DD:{if(TheProjector!=null){var GeographicCoordinate=TheProjector.ProjectToGeographic(RefX,RefY);RefX=GeographicCoordinate.Longitude;RefY=GeographicCoordinate.Latitude;}RefX=Math.floor(RefX*10000)/10000;RefY=Math.floor(RefY*10000)/10000;var LongitudeSymbol=CMUtilities.GetSymbol(RefX,true);var LatitudeSymbol=CMUtilities.GetSymbol(RefY,false);if(RefX<0)RefX=-RefX;if(RefY<0)RefY=-RefY;Text+=""+RefY+"\xB0 "+LatitudeSymbol+" "+RefX+"\xB0 "+LongitudeSymbol;}break;case CMUtilities.COORDINATE_UNITS_DMS:{if(TheProjector!=null){var GeographicCoordinate=TheProjector.ProjectToGeographic(RefX,RefY);RefX=GeographicCoordinate.Longitude;RefY=GeographicCoordinate.Latitude;}Text+=CMUtilities.GetDMSFromLonLat(RefX,RefY,true);}break;case CMUtilities.COORDINATE_UNITS_FEET:case CMUtilities.COORDINATE_UNITS_METERS:{Text+=CMUtilities.GetTextFromEastingNorthing(RefX,RefY);}break;case CMUtilities.COORDINATE_UNITS_PIXELS:{PixelX=TheView.GetPixelXFromRefX(RefX);PixelY=TheView.GetPixelYFromRefY(RefY);Text+=""+PixelX+", "+PixelY;}break;case CMUtilities.COORDINATE_UNITS_ZOOM:{Text+=TheView.GetZoomLevel();}break;}return(Text);}